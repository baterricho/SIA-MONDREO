<html lang="en">
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   Sign In &amp; Select College
  </title>
  <script src="https://cdn.tailwindcss.com">
  </script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
  <link href="https://fonts.googleapis.com/css2?family=Inter&amp;display=swap" rel="stylesheet"/>
  <style>
   body {
      font-family: "Inter", sans-serif;
      margin: 0;
      overflow: hidden;
      background-color: #fff9f9;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .fade-out {
      animation: fadeOut 0.4s forwards;
    }
    .fade-in {
      animation: fadeIn 0.4s forwards;
    }
    @keyframes fadeOut {
      from {
        opacity: 1;
        transform: translateX(0);
      }
      to {
        opacity: 0;
        transform: translateX(-20px);
      }
    }
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateX(20px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }
    #signInPage,
    #selectionPage,
    #queuePage,
    #confirmationPage,
    #queueStatusPage {
      max-height: 100vh;
      overflow: hidden;
    }
    input[type="checkbox"] {
      appearance: none;
      -webkit-appearance: none;
      -moz-appearance: none;
      width: 3rem;
      height: 1.5rem;
      background-color: #d1d5db;
      border-radius: 9999px;
      position: relative;
      cursor: pointer;
      outline: none;
      transition: background-color 0.3s ease;
    }
    input[type="checkbox"]:checked {
      background-color: #f97316;
    }
    input[type="checkbox"]:disabled {
      cursor: not-allowed;
      background-color: #e5e7eb;
    }
    input[type="checkbox"]::before {
      content: "";
      position: absolute;
      top: 0.125rem;
      left: 0.125rem;
      width: 1.25rem;
      height: 1.25rem;
      background-color: white;
      border-radius: 9999px;
      transition: transform 0.3s ease;
      box-shadow: 0 0 0 1px #9ca3af;
    }
    input[type="checkbox"]:checked::before {
      transform: translateX(1.5rem);
      box-shadow: 0 0 0 1px #f97316;
    }
    input[type="checkbox"]:checked::after {
      content: "\f00c";
      font-family: "Font Awesome 5 Free";
      font-weight: 900;
      color: #f97316;
      position: absolute;
      top: 0.125rem;
      left: 0.125rem;
      width: 1.25rem;
      height: 1.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
      pointer-events: none;
    }
    #queuePage main {
      overflow-y: auto;
      flex-grow: 1;
      padding-bottom: 1rem;
    }
    #confirmationPage main {
      overflow-y: auto;
      flex-grow: 1;
      padding: 1rem;
    }
    /* Queue Status Page Styles */
    @import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');
    #queueStatusPage body, #queueStatusPage {
      font-family: 'Roboto', sans-serif;
    }
    @keyframes dashrotate {
      0% {
        stroke-dashoffset: 220;
      }
      100% {
        stroke-dashoffset: 0;
      }
    }
    .animate-dashrotate {
      animation-name: dashrotate;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      animation-direction: normal;
      animation-fill-mode: forwards;
      animation-play-state: running;
      animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    .animate-dashrotate-reverse {
      animation-name: dashrotate;
      animation-timing-function: linear;
      animation-iteration-count: infinite;
      animation-direction: reverse;
      animation-fill-mode: forwards;
      animation-play-state: running;
      animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }
    @keyframes spin {
      0% { transform: rotate(0deg);}
      100% { transform: rotate(360deg);}
    }
    .spin {
      animation: spin 1s linear infinite;
    }
    /* Updated confirm button color on confirmation page */
    #confirmationPage footer button#doneBtn {
      background-color: #fb6a2a; /* orange */
      color: white;
    }
    #confirmationPage footer button#doneBtn:hover {
      background-color: #e05a1a; /* darker orange */
    }
  </style>
 </head>
 <body>
  <!-- Sign In Page -->
  <div class="bg-[#fff9f9] w-full max-w-xs p-8 flex flex-col items-center" id="signInPage">
   <div aria-label="Orange circle logo" class="w-20 h-20 rounded-full bg-[#fb9a6a] mb-6">
   </div>
   <h1 class="font-extrabold text-xl mb-1 text-black">
    Welcome
   </h1>
   <p class="text-sm mb-6 text-black">
    Please sign in to continue
   </p>
   <form class="w-full" id="signInForm" onsubmit="return false;">
    <label class="block text-xs mb-1 text-black" for="username">
     Username or Email
    </label>
    <input class="w-full mb-4 text-xs rounded-md bg-[#f7f5f7] px-3 py-2 placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-orange-400" id="username" placeholder="Enter your username" required="" type="text"/>
    <div class="flex justify-between items-center mb-1">
     <label class="text-xs text-black" for="password">
      Password
     </label>
     <a class="text-xs text-[#fb6a2a] hover:underline" href="#">
      Forgot password?
     </a>
    </div>
    <div class="relative mb-4">
     <input class="w-full text-xs rounded-md bg-[#f7f5f7] px-3 py-2 placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-orange-400 pr-10" id="password" placeholder="Enter your password" required="" type="password"/>
     <button aria-label="Toggle password visibility" class="absolute right-2 top-1/2 -translate-y-1/2 text-gray-500 hover:text-[#fb6a2a] focus:outline-none" id="togglePassword" type="button">
      <i class="fas fa-eye" id="eyeIcon">
      </i>
     </button>
    </div>
    <div class="mb-6">
     <label class="inline-flex items-center text-xs text-black cursor-pointer">
      <input class="form-checkbox text-orange-500" type="checkbox"/>
      <span class="ml-2">
       Remember me
      </span>
     </label>
    </div>
    <button class="w-full bg-[#fb6a2a] text-white font-semibold text-sm rounded-md py-2 shadow-md hover:bg-[#e05a1a] transition-colors" type="submit">
     Sign In
    </button>
   </form>
   <p class="text-xs text-black mt-6 mb-3">
    Donâ€™t have an account?
    <a class="text-[#fb6a2a] hover:underline" href="#">
     Sign up
    </a>
   </p>
   <div class="flex items-center w-full mb-6">
    <hr class="border-gray-300 flex-grow"/>
    <span class="text-xs text-black px-3">
     Or continue with
    </span>
    <hr class="border-gray-300 flex-grow"/>
   </div>
   <button aria-label="Sign in with Google" class="focus:outline-none" type="button">
    <img alt="Google logo with red, yellow, green and blue colors" height="24" src="https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg" style="display:block;" width="24"/>
   </button>
  </div>
  <!-- College & Program Selection Page -->
  <div class="max-w-md mx-auto min-h-screen flex flex-col hidden bg-gray-300 font-sans w-full" id="selectionPage" style="max-width: 384px">
   <header class="flex items-center justify-between bg-orange-500 px-4 py-3">
    <button aria-label="Back" class="text-white text-lg" disabled="" id="backBtn">
     <i class="fas fa-arrow-left">
     </i>
    </button>
    <h1 class="text-white text-center text-base font-normal leading-tight max-w-[70%]" id="headerTitle">
     Select Your College &amp;
     <br/>
     Program
    </h1>
    <button aria-label="Info" class="text-white text-lg">
     <i class="fas fa-info-circle">
     </i>
    </button>
   </header>
   <div class="flex items-center justify-center gap-2 bg-gray-300 mt-4 px-4">
    <div class="flex items-center gap-2" id="step1">
     <div class="flex items-center justify-center w-6 h-6 rounded-full bg-orange-500 text-white text-xs font-semibold">
      1
     </div>
     <span class="text-sm font-semibold text-gray-900">
      College Selection
     </span>
    </div>
    <div class="h-[1px] w-8 bg-gray-400">
    </div>
    <div class="flex items-center gap-2" id="step2">
     <div class="flex items-center justify-center w-6 h-6 rounded-full bg-gray-400 text-gray-500 text-xs font-semibold">
      2
     </div>
     <span class="text-sm font-semibold text-gray-400">
      Program Selection
     </span>
    </div>
   </div>
   <form aria-label="Academic Information" class="bg-gray-100 rounded-lg shadow-md mt-4 mx-4 p-4 flex flex-col gap-4 flex-grow" id="selectionForm">
    <h2 class="font-bold text-black text-base">
     Academic Information
    </h2>
    <label class="text-sm font-normal text-gray-900 flex items-center gap-1" for="college">
     Select College
     <span class="text-orange-500 font-bold">
      *
     </span>
    </label>
    <select class="w-full border-b border-gray-400 bg-transparent text-gray-700 text-sm py-1 focus:outline-none" id="college" name="college" required="">
     <option disabled="" selected="" value="">
      Select a college
     </option>
     <option value="arts">
      College of Arts and Humanities
     </option>
     <option value="science">
      College of Science
     </option>
     <option value="nursing">
      College of Nursing and Health Sciences
     </option>
     <option value="teachers">
      College of Teachers Education
     </option>
     <option value="business">
      College of Business and Accountancy
     </option>
     <option value="engineering">
      College of Engineering and Technology
     </option>
     <option value="architecture">
      College of Architecture and Design
     </option>
     <option value="criminal">
      College of Criminal Justice Education
     </option>
     <option value="hospitality">
      College of Hospitality Management and Tourism
     </option>
    </select>
    <label class="text-sm font-normal text-gray-900 flex items-center gap-1 mt-4" for="program">
     Select a program
     <span class="text-orange-500 font-bold">
      *
     </span>
    </label>
    <select class="w-full border-b border-gray-400 bg-transparent text-gray-700 text-sm py-1 focus:outline-none" disabled="" id="program" name="program" required="">
     <option disabled="" selected="" value="">
      Select a program
     </option>
    </select>
   </form>
   <div class="bg-gray-100 rounded-lg shadow-md mt-6 mx-4 p-3 flex items-start gap-3 text-xs text-gray-900 opacity-100" id="infoBox" role="alert">
    <i class="fas fa-info-circle text-orange-500 mt-[2px]">
    </i>
    <p>
     Your selection will determine your academic pathway and administrative
        contacts. Make sure to review your choices before proceeding.
    </p>
   </div>
   <button class="bg-gray-400 text-white text-sm font-normal rounded-md mx-4 mt-4 mb-6 py-2 w-[calc(100%-2rem)] cursor-not-allowed" disabled="" form="selectionForm" id="continueBtn" type="submit">
    Continue
   </button>
  </div>
  <!-- Queue Page (3rd page) -->
  <div class="max-w-4xl mx-auto min-h-screen flex flex-col hidden bg-gray-300 font-sans w-full p-4" id="queuePage">
   <header class="flex items-center justify-between bg-gray-300 px-4 py-3 shadow-md">
    <button aria-label="Back" class="text-black text-2xl font-extrabold leading-none" id="queueBackBtn">
     <i class="fas fa-chevron-left">
     </i>
    </button>
    <h1 class="text-black font-semibold text-lg">
     Join Queue
    </h1>
    <div aria-hidden="true" class="w-10 h-10 rounded-full bg-orange-400">
    </div>
   </header>
   <main class="px-4 py-4 space-y-6 w-full overflow-y-auto flex-grow" id="mainContent" tabindex="0">
    <section aria-label="Current Queue Status" class="bg-white rounded-xl p-4 shadow-lg max-w-md mx-auto">
     <div class="flex justify-between mb-2 text-sm text-gray-900 font-normal">
      <span>
       Current Queue Status
      </span>
      <span id="currentTime">
       09:09 AM
      </span>
     </div>
     <div class="flex justify-between items-center mb-4">
      <div aria-label="Number in queue and wait time" class="bg-gray-300 rounded-lg shadow-md flex flex-col justify-center items-start px-6 py-3 w-28">
       <span class="text-5xl font-light leading-none -mb-1" id="queueNumber">
        9
       </span>
       <span class="text-base font-normal">
        in queue
       </span>
       <span class="text-xs text-gray-600 -mt-1">
        Short wait time
       </span>
      </div>
      <div aria-label="Queue light status" class="bg-green-50 rounded-lg shadow-md flex flex-col justify-center items-center px-4 py-3 w-24">
       <span class="text-sm font-normal mb-1">
        Light
       </span>
       <div class="flex space-x-1 text-green-500 text-xl leading-none">
        <i class="fas fa-signal" style="font-size: 1.5rem">
        </i>
       </div>
      </div>
     </div>
     <div aria-label="Estimated wait time" class="bg-gray-300 rounded-lg shadow-md flex items-center space-x-4 px-6 py-4">
      <div aria-hidden="true" class="bg-orange-500 rounded-full w-10 h-10 flex justify-center items-center text-white text-xl">
       <i class="far fa-clock">
       </i>
      </div>
      <div class="flex flex-col">
       <span class="text-base font-normal">
        Estimated wait time
       </span>
       <span class="font-semibold text-lg" id="estimatedWait">
        ~10 mins
       </span>
      </div>
     </div>
    </section>
    <section class="max-w-md mx-auto space-y-2" id="transactionSection">
     <h2 class="text-gray-900 font-normal text-lg">
      Select Your Transaction
     </h2>
     <p class="text-gray-700 text-sm mb-2">
      Choose the service you need assisting with today
     </p>
     <div class="grid grid-cols-2 gap-4" id="transaction-buttons">
      <button aria-label="Registration:Course enrollment and class registration" class="bg-white rounded-xl shadow-md p-4 flex flex-col space-y-1 text-left transition-colors duration-200" data-transaction="registration" type="button">
       <div class="flex items-center space-x-2 text-orange-600">
        <i class="fas fa-book-open fa-lg">
        </i>
        <span class="font-semibold text-gray-900">
         Registration
        </span>
       </div>
       <p class="text-gray-800 text-sm leading-tight">
        Course enrollment and class registration
       </p>
      </button>
      <button aria-label="Payment: Fee payments" class="bg-white rounded-xl shadow-md p-4 flex flex-col space-y-1 text-left transition-colors duration-200" data-transaction="payment" type="button">
       <div class="flex items-center space-x-2 text-orange-600">
        <i class="fas fa-credit-card fa-lg">
        </i>
        <span class="font-semibold text-gray-900">
         Payment
        </span>
       </div>
       <p class="text-gray-800 text-sm leading-tight">
        Fee payments
       </p>
      </button>
      <button aria-label="Document Requests: Transcripts, COR and Copy of Grades" class="bg-white rounded-xl shadow-md p-4 flex flex-col space-y-1 text-left transition-colors duration-200" data-transaction="document-requests" type="button">
       <div class="flex items-center space-x-2 text-orange-600">
        <i class="fas fa-file-alt fa-lg">
        </i>
        <span class="font-semibold text-gray-900">
         Document Requests
        </span>
       </div>
       <p class="text-gray-800 text-sm leading-tight">
        Transcripts, COR and Copy of Grades
       </p>
      </button>
      <button aria-label="Other: Additional services not listed" class="bg-white rounded-xl shadow-md p-4 flex flex-col space-y-1 text-left transition-colors duration-200" data-transaction="other" type="button">
       <div class="flex items-center space-x-2 text-orange-600">
        <i class="fas fa-ellipsis-h fa-lg">
        </i>
        <span class="font-semibold text-gray-900">
         Other
        </span>
       </div>
       <p class="text-gray-800 text-sm leading-tight">
        Additional services not listed
       </p>
      </button>
     </div>
    </section>
    <section aria-label="Notification Preferences" class="max-w-md mx-auto bg-white rounded-xl shadow-lg p-4 space-y-4" id="notificationSection">
     <div>
      <h3 class="text-gray-900 font-normal text-lg">
       Notification Preferences
      </h3>
      <p class="text-gray-700 text-sm">
       How would you like to be notified about your queue status?
      </p>
     </div>
     <form class="space-y-4" id="notification-form">
      <div class="flex items-center justify-between">
       <div class="flex items-center space-x-2 text-orange-600">
        <i class="fas fa-bell fa-lg">
        </i>
        <div>
         <p class="font-semibold text-gray-900 leading-none">
          Push Notification
         </p>
         <p class="text-gray-700 text-xs leading-tight">
          Receive alerts on this device
         </p>
        </div>
       </div>
       <input aria-checked="false" aria-label="Enable Push Notification" id="pushNotification" type="checkbox"/>
      </div>
      <div class="flex items-center justify-between">
       <div class="flex items-center space-x-2 text-orange-600">
        <i class="fas fa-envelope fa-lg">
        </i>
        <div>
         <p class="font-semibold text-gray-900 leading-none">
          SMS Notification
         </p>
         <p class="text-gray-700 text-xs leading-tight">
          Get text message about your queue status
         </p>
        </div>
       </div>
       <input aria-checked="false" aria-label="Enable SMS Notification" disabled="" id="smsNotification" type="checkbox"/>
      </div>
      <div class="flex flex-col sm:flex-row sm:items-center sm:space-x-4 space-y-2 sm:space-y-0 hidden" id="phoneContainer">
       <label class="sr-only" for="phone">
        Phone Number
       </label>
       <input aria-describedby="phoneHelp" class="flex-grow border border-gray-900 rounded-md px-3 py-1 text-gray-900 text-sm focus:outline-none focus:ring-2 focus:ring-orange-500" disabled="" id="phone" placeholder="Phone Number" type="text"/>
       <button class="bg-gray-300 text-white px-5 py-2 rounded-md text-sm font-semibold cursor-not-allowed" disabled="" id="verifyBtn" type="button">
        Verify
       </button>
      </div>
      <p class="text-xs text-gray-700 font-semibold hidden" id="phoneHelp">
       Standard message rate may apply
      </p>
      <div>
       <p class="font-semibold text-gray-900 mb-2">
        You'll be notified:
       </p>
       <ul class="space-y-1 text-gray-900 text-sm">
        <li class="flex items-center space-x-2">
         <span aria-hidden="true" class="inline-block w-5 h-5 rounded-full bg-orange-500 text-white flex justify-center items-center text-xs font-bold">
          âœ“
         </span>
         <span>
          When you're 5th in line
         </span>
        </li>
        <li class="flex items-center space-x-2">
         <span aria-hidden="true" class="inline-block w-5 h-5 rounded-full bg-orange-500 text-white flex justify-center items-center text-xs font-bold">
          âœ“
         </span>
         <span>
          When you're next in line
         </span>
        </li>
        <li class="flex items-center space-x-2">
         <span aria-hidden="true" class="inline-block w-5 h-5 rounded-full bg-orange-500 text-white flex justify-center items-center text-xs font-bold">
          âœ“
         </span>
         <span>
          If estimated wait time changes significantly
         </span>
        </li>
       </ul>
      </div>
     </form>
    </section>
    <section class="max-w-md mx-auto bg-white rounded-xl shadow-lg p-4 space-y-4">
     <h3 class="text-gray-900 font-semibold text-lg">
      Queue Guidelines
     </h3>
     <p class="text-gray-700 text-sm">
      Please arrive at least 10 minutes before your estimated time. If you
          are late, your spot may be forfeited.
     </p>
     <h3 class="text-gray-900 font-semibold text-lg">
      Contact Support
     </h3>
     <p class="text-gray-700 text-sm">
      For assistance, please contact our support team at
      <a class="text-orange-600 hover:underline" href="mailto:support@university.edu">
       support@university.edu
      </a>
      or call
      <a class="text-orange-600 hover:underline" href="tel:+1234567890">
       +1 (234) 567-890
      </a>
      .
     </p>
    </section>
   </main>
   <footer class="max-w-md mx-auto px-4 pb-6 pt-4">
    <button class="w-full bg-gray-400 text-white font-semibold text-xl rounded-lg py-3 mb-2 cursor-not-allowed" disabled="" id="confirmBtn" type="button">
     Confirm &amp; Join Queue
    </button>
    <p class="text-center text-gray-700 text-sm" id="footerMessage">
     Please enable Push Notification and select a transaction to continue
    </p>
   </footer>
  </div>
  <!-- Confirmation Page (4th page) -->
  <div class="max-w-md mx-auto min-h-screen flex flex-col hidden bg-white font-sans w-full p-6 rounded-lg shadow-lg" id="confirmationPage">
   <header class="flex justify-center mb-6">
    <img alt="Orange and white checkmark icon symbolizing success and confirmation matching the website's theme color" class="w-20 h-20" height="80" src="https://storage.googleapis.com/a1aa/image/7603ed00-6fb0-4ee2-9472-2c2c72b76748.jpg" width="80"/>
   </header>
   <main class="flex-grow flex flex-col items-center text-center space-y-4">
    <h2 class="text-2xl font-bold text-gray-900">
     You have successfully joined the queue!
    </h2>
    <p class="text-gray-700">
     Thank you for joining the queue. Please wait for your turn and follow
        the instructions sent to your notifications.
    </p>
    <img alt="Illustration of a group of diverse students queuing up patiently outside a university building, in a clean and modern flat style" class="w-full max-w-xs rounded-md shadow-md" height="200" src="https://storage.googleapis.com/a1aa/image/e364df15-db31-44b2-6672-7fada0d69bd8.jpg" width="300"/>
   </main>
   <footer class="mt-6">
    <button class="w-full bg-orange-600 hover:bg-orange-700 text-white font-semibold py-3 rounded-md transition-colors" id="doneBtn" type="button">
     Done
    </button>
   </footer>
  </div>
  <!-- Queue Status Page (5th page) -->
  <div class="hidden flex flex-col min-h-screen bg-gray-300" id="queueStatusPage">
   <header class="flex items-center justify-between bg-gray-300 px-4 py-3 border-b border-gray-400">
    <button aria-label="Back" class="text-black text-2xl leading-none" id="queueStatusBackBtn" type="button">
     <i class="fas fa-chevron-left">
     </i>
    </button>
    <h1 class="text-black font-extrabold text-lg">
     Queue Status
    </h1>
    <button aria-label="Refresh" class="text-orange-600 text-2xl leading-none" id="refreshBtn" type="button" title="Refresh queue status">
     <i class="fas fa-redo-alt">
     </i>
    </button>
   </header>
   <section class="mx-4 mt-6 bg-gray-200 rounded-lg shadow-md py-4 px-6">
    <p class="text-center text-black text-sm mb-1">
     Current Status
    </p>
    <p class="text-center text-orange-600 text-sm font-normal" id="lastUpdated">
     Last updated: 9:09 AM
    </p>
   </section>
   <section class="flex flex-col items-center mt-10">
    <svg aria-label="Queue status circle" class="w-40 h-40" fill="none" role="img" viewBox="0 0 160 160" xmlns="http://www.w3.org/2000/svg">
     <circle cx="80" cy="80" r="70" stroke="#F97316" stroke-dasharray="220 220" stroke-dashoffset="0" stroke-linecap="round" stroke-width="2" class="animate-dashrotate">
     </circle>
     <circle cx="80" cy="80" opacity="0.3" r="70" stroke="#F97316" stroke-dasharray="220 220" stroke-dashoffset="110" stroke-linecap="round" stroke-width="2" class="animate-dashrotate-reverse">
     </circle>
     <text fill="#000000" font-family="Roboto, sans-serif" font-size="14" font-weight="400" text-anchor="middle" x="80" y="60">
      Your Queue
     </text>
     <text fill="#F97316" font-family="Roboto, sans-serif" font-size="56" font-weight="400" text-anchor="middle" x="80" y="105" id="queueStatusNumber">
      10
     </text>
     <text fill="#000000" font-family="Roboto, sans-serif" font-size="16" font-weight="400" text-anchor="middle" x="80" y="130" id="queueTotal">
      of 10 total
     </text>
    </svg>
   </section>
   <section class="mt-10 mx-6 space-y-8">
    <div class="flex items-center space-x-4">
     <div class="flex-shrink-0">
      <div class="w-10 h-10 rounded-full bg-orange-600 flex items-center justify-center">
       <i class="fas fa-clock text-white text-lg">
       </i>
      </div>
     </div>
     <div class="flex-1">
      <p class="font-semibold text-black text-base">
       Estimated Wait Time
      </p>
      <p class="text-black text-sm">
       Based on current queue speed
      </p>
     </div>
     <div class="text-orange-600 font-extrabold text-xl text-right w-20 leading-tight">
      <span id="waitTimeNumber">15</span>
      <br/>
      <span id="waitTimeUnit">mins</span>
     </div>
    </div>
    <div class="flex items-center space-x-4">
     <div class="flex-shrink-0">
      <div class="w-10 h-10 rounded-full bg-orange-600 flex items-center justify-center">
       <i class="fas fa-tachometer-alt text-white text-lg"></i>
      </div>
     </div>
     <div class="flex-1">
      <p class="font-semibold text-black text-base">
       Queue Speed
      </p>
      <p class="text-black text-sm">
       Moderate
      </p>
     </div>
     <div class="text-orange-600 font-extrabold text-xl text-right w-28 leading-tight">
      1.7 mins/
      <br/>
      person
     </div>
    </div>
   </section>
  </div>
  <script>
   // Password toggle
    const togglePassword = document.getElementById("togglePassword");
    const passwordInput = document.getElementById("password");
    const eyeIcon = document.getElementById("eyeIcon");

    togglePassword.addEventListener("click", () => {
      const type =
        passwordInput.getAttribute("type") === "password" ? "text" : "password";
      passwordInput.setAttribute("type", type);

      if (type === "text") {
        eyeIcon.classList.remove("fa-eye");
        eyeIcon.classList.add("fa-eye-slash");
      } else {
        eyeIcon.classList.remove("fa-eye-slash");
        eyeIcon.classList.add("fa-eye");
      }
    });

    // Page elements
    const signInForm = document.getElementById("signInForm");
    const signInPage = document.getElementById("signInPage");
    const selectionPage = document.getElementById("selectionPage");
    const queuePage = document.getElementById("queuePage");
    const confirmationPage = document.getElementById("confirmationPage");
    const queueStatusPage = document.getElementById("queueStatusPage");

    // College & Program selection elements
    const programsByCollege = {
      arts: [
        "Bachelor of Arts in Communication",
        "Bachelor of Arts in Political Science",
        "Bachelor of Arts in Philippine Studies",
        "Bachelor of Science in Social Work",
        "Bachelor of Science in Psychology",
      ],
      business: [
        "Bachelor of Science in Accountancy",
        "Bachelor of Science in Management Accounting",
        "Bachelor of Science in Business Administration",
        "Bachelor of Science in Entrepreneurship",
        "Bachelor of Science in Public Administration",
      ],
      criminal: ["Bachelor of Science in Criminology"],
      engineering: [
        "Bachelor of Science in Civil Engineering",
        "Bachelor of Science in Electrical Engineering",
        "Bachelor of Science in Mechanical Engineering",
        "Bachelor of Science in Petroleum Engineering",
      ],
      architecture: ["Bachelor of Science in Architecture"],
      hospitality: [
        "Bachelor of Science in Hospitality Management",
        "Bachelor of Science in Tourism Management",
      ],
      science: [
        "Bachelor of Science in Biology",
        "Bachelor of Science in Marine Biology",
        "Bachelor of Science in Computer Science",
        "Bachelor of Science in Environmental Science",
        "Bachelor of Science in Information Technology",
      ],
      teachers: [
        "Bachelor of Physical Education",
        "Bachelor of Elementary Education",
        "Bachelor of Secondary Education",
      ],
      nursing: ["Bachelor of Science in Nursing", "Bachelor of Science in Midwifery"],
    };

    const collegeSelect = document.getElementById("college");
    const programSelect = document.getElementById("program");
    const continueBtn = document.getElementById("continueBtn");
    const infoBox = document.getElementById("infoBox");
    const step1 = document.getElementById("step1");
    const step2 = document.getElementById("step2");
    const backBtn = document.getElementById("backBtn");

    const transactionButtons = queuePage.querySelectorAll("#transaction-buttons button");
    const confirmBtn = document.getElementById("confirmBtn");
    const pushCheckbox = document.getElementById("pushNotification");
    const smsCheckbox = document.getElementById("smsNotification");
    const phoneContainer = document.getElementById("phoneContainer");
    const phoneInput = document.getElementById("phone");
    const verifyBtn = document.getElementById("verifyBtn");
    const footerMessage = document.getElementById("footerMessage");
    const queueBackBtn = document.getElementById("queueBackBtn");

    const doneBtn = document.getElementById("doneBtn");
    const queueStatusBackBtn = document.getElementById("queueStatusBackBtn");
    const refreshBtn = document.getElementById("refreshBtn");

    let selectedTransaction = null;
    let phoneVerified = false;
    let joinedQueue = false;

    // Sign In form submit
    signInForm.addEventListener("submit", (e) => {
      e.preventDefault();
      signInPage.classList.add("hidden");
      selectionPage.classList.remove("hidden");
      backBtn.disabled = false;
    });

    // Back button on selection page
    backBtn.addEventListener("click", () => {
      selectionPage.classList.add("hidden");
      signInPage.classList.remove("hidden");
      backBtn.disabled = true;

      collegeSelect.value = "";
      programSelect.innerHTML =
        '<option value="" selected disabled>Select a program</option>';
      programSelect.disabled = true;
      continueBtn.disabled = true;
      continueBtn.classList.add("bg-gray-400", "cursor-not-allowed");
      continueBtn.classList.remove("bg-orange-600", "cursor-pointer");
      infoBox.style.opacity = "1";
      infoBox.style.pointerEvents = "auto";
      step1.querySelector("div").classList.replace("bg-gray-400", "bg-orange-500");
      step1.querySelector("span").classList.replace("text-gray-400", "text-gray-900");
      step2.querySelector("div").classList.replace("bg-orange-500", "bg-gray-400");
      step2.querySelector("span").classList.replace("text-gray-900", "text-gray-400");
    });

    // College select change
    collegeSelect.addEventListener("change", () => {
      const selectedCollege = collegeSelect.value;
      programSelect.innerHTML =
        '<option value="" selected disabled>Select a program</option>';
      continueBtn.disabled = true;
      continueBtn.classList.add("bg-gray-400", "cursor-not-allowed");
      continueBtn.classList.remove("bg-orange-600", "cursor-pointer");
      programSelect.disabled = true;

      if (selectedCollege && programsByCollege[selectedCollege]) {
        programsByCollege[selectedCollege].forEach((program) => {
          const option = document.createElement("option");
          option.value = program
            .toLowerCase()
            .replace(/\s+/g, "-")
            .replace(/[^a-z0-9\-]/g, "");
          option.textContent = program;
          programSelect.appendChild(option);
        });
        programSelect.disabled = false;

        infoBox.classList.add("fade-out");
        setTimeout(() => {
          infoBox.style.opacity = "0";
          infoBox.style.pointerEvents = "none";
          infoBox.classList.remove("fade-out");
        }, 400);

        step1.querySelector("div").classList.replace("bg-orange-500", "bg-gray-400");
        step1.querySelector("span").classList.replace("text-gray-900", "text-gray-400");
        step2.querySelector("div").classList.replace("bg-gray-400", "bg-orange-500");
        step2.querySelector("span").classList.replace("text-gray-400", "text-gray-900");
      } else {
        infoBox.style.opacity = "1";
        infoBox.style.pointerEvents = "auto";

        step1.querySelector("div").classList.replace("bg-gray-400", "bg-orange-500");
        step1.querySelector("span").classList.replace("text-gray-400", "text-gray-900");
        step2.querySelector("div").classList.replace("bg-orange-500", "bg-gray-400");
        step2.querySelector("span").classList.replace("text-gray-900", "text-gray-400");
      }
    });

    // Program select change
    programSelect.addEventListener("change", () => {
      if (programSelect.value && collegeSelect.value) {
        continueBtn.disabled = false;
        continueBtn.classList.remove("bg-gray-400", "cursor-not-allowed");
        continueBtn.classList.add("bg-orange-600", "cursor-pointer");
      } else {
        continueBtn.disabled = true;
        continueBtn.classList.add("bg-gray-400", "cursor-not-allowed");
        continueBtn.classList.remove("bg-orange-600", "cursor-pointer");
      }
    });

    // Continue button click
    continueBtn.addEventListener("click", (e) => {
      e.preventDefault();
      if (!continueBtn.disabled) {
        selectionPage.classList.add("hidden");
        queuePage.classList.remove("hidden");
        resetQueuePage();
      }
    });

    // Queue page back button
    queueBackBtn.addEventListener("click", () => {
      if (joinedQueue) return;
      queuePage.classList.add("hidden");
      selectionPage.classList.remove("hidden");
    });

    // Reset queue page state
    function resetQueuePage() {
      selectedTransaction = null;
      phoneVerified = false;
      joinedQueue = false;
      footerMessage.textContent =
        "Please enable Push Notification and select a transaction to continue";
      confirmBtn.disabled = true;
      confirmBtn.classList.add("bg-gray-400", "cursor-not-allowed");
      confirmBtn.classList.remove("bg-orange-400", "cursor-pointer");

      transactionButtons.forEach((btn) => {
        btn.disabled = false;
        btn.classList.remove(
          "cursor-not-allowed",
          "opacity-60",
          "bg-orange-100",
          "border",
          "border-orange-500"
        );
        btn.querySelector("div").classList.remove("text-orange-700");
        btn.querySelector("p").classList.remove("text-orange-700");
      });

      pushCheckbox.disabled = false;
      pushCheckbox.checked = false;
      smsCheckbox.disabled = true;
      smsCheckbox.checked = false;

      phoneInput.disabled = true;
      phoneInput.value = "";
      verifyBtn.disabled = true;
      verifyBtn.textContent = "Verify";
      verifyBtn.classList.remove("bg-orange-500", "cursor-pointer");
      verifyBtn.classList.add("bg-gray-300", "cursor-not-allowed");

      pushCheckbox.parentElement.classList.remove("opacity-50", "cursor-not-allowed");
      smsCheckbox.parentElement.classList.add("opacity-50", "cursor-not-allowed");

      phoneContainer.classList.add("hidden");
      document.getElementById("phoneHelp").classList.add("hidden");

      updateToggleStates();
      updateConfirmButton();
      updateCurrentTime();
    }

    // Update current time display
    function updateCurrentTime() {
      const now = new Date();
      const options = { hour: "2-digit", minute: "2-digit", hour12: true };
      const timeString = now.toLocaleTimeString([], options);
      document.getElementById("currentTime").textContent = timeString;
    }

    // Update phone input visibility
    function updatePhoneVisibility() {
      if (smsCheckbox.checked) {
        phoneContainer.classList.remove("hidden");
        phoneInput.removeAttribute("disabled");
        document.getElementById("phoneHelp").classList.remove("hidden");
        if (phoneInput.value.trim().length > 0 && !phoneVerified) {
          verifyBtn.removeAttribute("disabled");
          verifyBtn.classList.remove("bg-gray-300", "cursor-not-allowed");
          verifyBtn.classList.add("bg-orange-500", "cursor-pointer");
        } else if (phoneVerified) {
          verifyBtn.setAttribute("disabled", "true");
          verifyBtn.classList.remove("bg-orange-500", "cursor-pointer");
          verifyBtn.classList.add("bg-gray-300", "cursor-not-allowed");
        } else {
          verifyBtn.setAttribute("disabled", "true");
          verifyBtn.classList.remove("bg-orange-500", "cursor-pointer");
          verifyBtn.classList.add("bg-gray-300", "cursor-not-allowed");
        }
        phoneInput.classList.remove("bg-gray-200", "cursor-not-allowed");
      } else {
        phoneContainer.classList.add("hidden");
        phoneInput.setAttribute("disabled", "true");
        verifyBtn.setAttribute("disabled", "true");
        phoneInput.classList.add("bg-gray-200", "cursor-not-allowed");
        verifyBtn.classList.add("bg-gray-300", "cursor-not-allowed");
        phoneVerified = false;
        verifyBtn.textContent = "Verify";
        document.getElementById("phoneHelp").classList.add("hidden");
        updateConfirmButton();
      }
    }

    // Update toggle states
    function updateToggleStates() {
      if (pushCheckbox.checked) {
        smsCheckbox.removeAttribute("disabled");
        smsCheckbox.parentElement.classList.remove("opacity-50", "cursor-not-allowed");
      } else {
        smsCheckbox.checked = false;
        smsCheckbox.setAttribute("disabled", "true");
        smsCheckbox.parentElement.classList.add("opacity-50", "cursor-not-allowed");
      }
      updatePhoneVisibility();
    }

    // Update confirm button state
    function updateConfirmButton() {
      if (joinedQueue) {
        confirmBtn.disabled = true;
        confirmBtn.classList.add("bg-gray-400", "cursor-not-allowed");
        confirmBtn.classList.remove("bg-orange-400", "cursor-pointer");
        return;
      }
      if (!pushCheckbox.checked) {
        confirmBtn.disabled = true;
        confirmBtn.classList.add("bg-gray-400", "cursor-not-allowed");
        confirmBtn.classList.remove("bg-orange-400", "cursor-pointer");
        footerMessage.textContent = "Please enable Push Notification to continue";
        return;
      }
      if (selectedTransaction) {
        if (smsCheckbox.checked) {
          if (phoneVerified) {
            confirmBtn.disabled = false;
            confirmBtn.classList.remove("bg-gray-400", "cursor-not-allowed");
            confirmBtn.classList.add("bg-orange-400", "cursor-pointer");
            footerMessage.textContent = "";
          } else {
            confirmBtn.disabled = true;
            confirmBtn.classList.add("bg-gray-400", "cursor-not-allowed");
            confirmBtn.classList.remove("bg-orange-400", "cursor-pointer");
            footerMessage.textContent = "Please verify your phone number to continue";
          }
        } else {
          confirmBtn.disabled = false;
          confirmBtn.classList.remove("bg-gray-400", "cursor-not-allowed");
          confirmBtn.classList.add("bg-orange-400", "cursor-pointer");
          footerMessage.textContent = "";
        }
      } else {
        confirmBtn.disabled = true;
        confirmBtn.classList.add("bg-gray-400", "cursor-not-allowed");
        confirmBtn.classList.remove("bg-orange-400", "cursor-pointer");
        footerMessage.textContent = "Please select a transaction to continue";
      }
    }

    // Transaction buttons click
    transactionButtons.forEach((btn) => {
      btn.addEventListener("click", () => {
        if (joinedQueue) return;
        transactionButtons.forEach((b) => {
          b.classList.remove("bg-orange-100", "border", "border-orange-500");
          b.querySelector("div").classList.remove("text-orange-700");
          b.querySelector("p").classList.remove("text-orange-700");
        });
        btn.classList.add("bg-orange-100", "border", "border-orange-500");
        btn.querySelector("div").classList.add("text-orange-700");
        btn.querySelector("p").classList.add("text-orange-700");
        selectedTransaction = btn.getAttribute("data-transaction");
        updateConfirmButton();
        footerMessage.textContent = "";
      });
    });

    // Push notification toggle change
    pushCheckbox.addEventListener("change", () => {
      if (joinedQueue) {
        pushCheckbox.checked = true;
        return;
      }
      updateToggleStates();
      updateConfirmButton();
    });

    // SMS notification toggle change
    smsCheckbox.addEventListener("change", () => {
      if (joinedQueue) {
        smsCheckbox.checked = true;
        return;
      }
      updatePhoneVisibility();
      phoneVerified = false;
      verifyBtn.textContent = "Verify";
      verifyBtn.disabled = true;
      verifyBtn.classList.remove("bg-orange-500", "cursor-pointer");
      verifyBtn.classList.add("bg-gray-300", "cursor-not-allowed");
      phoneInput.disabled = false;
      updateConfirmButton();
    });

    // Phone input event
    phoneInput.addEventListener("input", () => {
      if (joinedQueue) return;
      phoneVerified = false;
      verifyBtn.textContent = "Verify";
      if (phoneInput.value.trim().length > 0) {
        verifyBtn.disabled = false;
        verifyBtn.classList.remove("bg-gray-300", "cursor-not-allowed");
        verifyBtn.classList.add("bg-orange-500", "cursor-pointer");
      } else {
        verifyBtn.disabled = true;
        verifyBtn.classList.add("bg-gray-300", "cursor-not-allowed");
        verifyBtn.classList.remove("bg-orange-500", "cursor-pointer");
      }
      updateConfirmButton();
    });

    // Verify button click
    verifyBtn.addEventListener("click", () => {
      if (joinedQueue) return;
      const phoneValue = phoneInput.value.trim();
      const phonePattern = /^[+]?[\d\s\-]{10,15}$/;
      if (!phoneValue) {
        alert("Please enter your phone number.");
        phoneInput.focus();
        return;
      }
      if (!phonePattern.test(phoneValue)) {
        alert("Please enter a valid phone number (10 to 15 digits).");
        phoneInput.focus();
        return;
      }
      phoneVerified = true;
      verifyBtn.textContent = "Verified";
      verifyBtn.disabled = true;
      verifyBtn.classList.remove("bg-orange-500", "cursor-pointer");
      verifyBtn.classList.add("bg-gray-300", "cursor-not-allowed");
      phoneInput.disabled = true;
      updateConfirmButton();
    });

    // Confirm button click - show confirmation page
    confirmBtn.addEventListener("click", () => {
      if (confirmBtn.disabled || joinedQueue) return;
      joinedQueue = true;
      transactionButtons.forEach((btn) => {
        btn.disabled = true;
        btn.classList.add("cursor-not-allowed", "opacity-60");
      });
      pushCheckbox.disabled = true;
      smsCheckbox.disabled = true;
      verifyBtn.disabled = true;
      phoneInput.disabled = true;
      confirmBtn.disabled = true;
      confirmBtn.classList.remove("bg-orange-400", "cursor-pointer");
      confirmBtn.classList.add("bg-gray-400", "cursor-not-allowed");
      footerMessage.textContent = "You have successfully joined the queue.";
      pushCheckbox.parentElement.classList.add("opacity-50", "cursor-not-allowed");
      smsCheckbox.parentElement.classList.add("opacity-50", "cursor-not-allowed");

      queuePage.classList.add("hidden");
      confirmationPage.classList.remove("hidden");
    });

    // Done button click - show queue status page
    doneBtn.addEventListener("click", () => {
      confirmationPage.classList.add("hidden");
      queueStatusPage.classList.remove("hidden");
      updateCurrentTimeQueueStatus();
      setAnimationSpeed(15);
      updateQueueStatus(10, 15);
    });

    // Queue Status Page Back button - go to sign in page
    queueStatusBackBtn.addEventListener("click", () => {
      queueStatusPage.classList.add("hidden");
      signInPage.classList.remove("hidden");

      // Reset all forms and states
      signInForm.reset();

      collegeSelect.value = "";
      programSelect.innerHTML =
        '<option value="" selected disabled>Select a program</option>';
      programSelect.disabled = true;
      continueBtn.disabled = true;
      continueBtn.classList.add("bg-gray-400", "cursor-not-allowed");
      continueBtn.classList.remove("bg-orange-600", "cursor-pointer");
      infoBox.style.opacity = "1";
      infoBox.style.pointerEvents = "auto";
      step1.querySelector("div").classList.replace("bg-gray-400", "bg-orange-500");
      step1.querySelector("span").classList.replace("text-gray-400", "text-gray-900");
      step2.querySelector("div").classList.replace("bg-orange-500", "bg-gray-400");
      step2.querySelector("span").classList.replace("text-gray-900", "text-gray-400");

      resetQueuePage();
    });

    // Queue Status Page refresh button logic
    function setAnimationSpeed(waitTime) {
      const baseDuration = 1.5;
      let duration = baseDuration * waitTime;
      if (duration < 1.5) duration = 1.5;
      if (duration > 10) duration = 10;

      const circles = document.querySelectorAll(
        ".animate-dashrotate, .animate-dashrotate-reverse"
      );
      circles.forEach((circle) => {
        circle.style.animationDuration = duration + "s";
      });
    }

    function updateQueueStatus(queueNumber, waitTime) {
      document.getElementById("queueStatusNumber").textContent = queueNumber;
      document.getElementById("queueTotal").textContent = `of 10 total`;
      document.getElementById("waitTimeNumber").textContent = Math.round(waitTime);
      document.getElementById("waitTimeUnit").textContent = "mins";
      setAnimationSpeed(waitTime);
    }

    function updateCurrentTimeQueueStatus() {
      const now = new Date();
      const hours = now.getHours() % 12 || 12;
      const minutes = now.getMinutes().toString().padStart(2, "0");
      const ampm = now.getHours() >= 12 ? "PM" : "AM";
      const updatedTime = `${hours}:${minutes} ${ampm}`;
      document.getElementById("lastUpdated").textContent = `Last updated: ${updatedTime}`;
    }

    function refreshQueueStatus() {
      const refreshBtn = document.getElementById("refreshBtn");
      const refreshIcon = refreshBtn.querySelector("i");
      refreshIcon.classList.add("spin");
      refreshBtn.disabled = true;

      setTimeout(() => {
        updateCurrentTimeQueueStatus();

        const newQueue = Math.floor(Math.random() * 11) + 5;
        const newWaitTime = (newQueue * 1.5).toFixed(1);

        updateQueueStatus(newQueue, newWaitTime);

        refreshIcon.classList.remove("spin");
        refreshBtn.disabled = false;
      }, 2000);
    }

    refreshBtn.addEventListener("click", refreshQueueStatus);
  </script>
 </body>
</html>
